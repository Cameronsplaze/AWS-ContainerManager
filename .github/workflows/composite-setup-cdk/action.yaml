name: "Composite: Setup Everything to use CDK"

description: Setup Action for CDK stuff

inputs:
  secrets:
    description: "The secrets to export as environment variables"
    required: true
  vars:
    description: "The vars to export as environment variables"
    required: true

runs:
  using: "composite"
  steps:

    ## Some of the Secrets (Like Email), takes a list of emails. This goes through
    # each secret with a space, and masks each sub-secret inside it.
    - name: Hide all sub-secrets
      shell: bash
      run: |
        echo "$SECRETS_CONTEXT" | jq -r 'to_entries[] | .value' | while read secret; do
          for secret_part in $secret; do echo "::add-mask::${secret_part}"; done
        done
      env:
        SECRETS_CONTEXT: ${{ inputs.secrets }}

    ## If you're using CDK, you'll need all the variables
    ## like 'HOSTED_ZONE_ID' declared to synth/deploy:
    # Taken from: https://stackoverflow.com/a/75789640/11650472
    - name: Export GitHub Secret/Vars as Shell Variables
      shell: bash
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
      run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          to_envs() { jq -r "( . // {} ) | to_entries[] | \"\(.key)<<$EOF\n\(.value)\n$EOF\n\""; }
          echo "$VARS_CONTEXT" | to_envs >> $GITHUB_ENV
          echo "$SECRETS_CONTEXT" | to_envs >> $GITHUB_ENV
      env:
          SECRETS_CONTEXT: ${{ inputs.secrets }}
          VARS_CONTEXT: ${{ inputs.vars }}

    # Finally, install everything:
    - name: Setup Python
      uses: ./.github/workflows/composite-setup-python

    - uses: actions/setup-node@v4
      with:
        # Get the latest even-numbered version (their LTS):
        node-version: 'lts/*'

    - name: Install NPM Stuff (aws-cdk)
      shell: bash
      run: |
        ### Update:
        make update-npm-cdk
        ### Add NPM stuff to PATH:
        echo "PATH=~/.npm-global/bin:$PATH" >> "$GITHUB_ENV"

    ## Log into AWS:
    # (cdk-synth needs it too, to create a valid env for stacks)
    # Do this last, so the timeout lasts the longest.
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        # Can switch to using secrets directly if github ever
        # adds support: https://github.com/actions/toolkit/issues/1168
        aws-region: "${{ fromJSON(inputs.vars).AWS_REGION }}"
        role-to-assume: "arn:aws:iam::${{ fromJSON(inputs.secrets).AWS_ACCOUNT_ID }}:role/${{ fromJSON(inputs.vars).AWS_DEPLOY_ROLE }}"
